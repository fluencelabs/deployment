positions:
  filename: "/data/positions.yml"

clients:
  - url: "https://loki.fluence.dev/loki/api/v1/push"
    external_labels:
      instance: "${FLUENCE_INSTANCE_ID}"
      env: "${FLUENCE_NETWORK}"
      network: "${FLUENCE_NETWORK}"
    authorization:
      credentials_file: "/config/credentials"

scrape_configs:
  - job_name: "cometbft"
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: label
            values: ["name=cometbft"]
    pipeline_stages:
      - regex:
          expression: '^(?P<level>[A-Z])\[(?P<timestamp>[^\]]+)\] (?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: '2006-01-02|15:04:05.999'
      - template:
          source: level
          template: |
            {{- if eq .Value "I" -}}
            info
            {{- else if eq .Value "W" -}}
            warn
            {{- else if eq .Value "E" -}}
            error
            {{- else if eq .Value "D" -}}
            debug
            {{- end -}}
      - labels:
          level: level

  - job_name: "fendemint"
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: label
            values: ["name=fendermint"]
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>[^ ]+) (?P<level>[A-Z]+)'
      - timestamp:
          source: timestamp
          format: 'RFC3339'
      - template:
          source: level
          template: |
            {{- if eq .Value "INFO" -}}
            info
            {{- else if eq .Value "WARN" -}}
            warn
            {{- else if eq .Value "ERROR" -}}
            error
            {{- else if eq .Value "DEBUG" -}}
            debug
            {{- end -}}
      - labels:
          level:
      - drop:
          expression: ".* listening for requests"
          drop_counter_reason: "noise"

  - job_name: "eth-api"
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        filters:
          - name: label
            values: ["name=eth-api"]
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>[^ ]+) (?P<level>[A-Z]+)'
      - timestamp:
          source: timestamp
          format: 'RFC3339'
